{"swagger": "2.0", "info": {"title": "Medical Device Testing API", "description": "API documentation for Medical Device Testing System", "termsOfService": "https://www.example.com/terms/", "contact": {"email": "contact@example.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json", "application/coreapi+json"], "securityDefinitions": {"Token": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Token": []}], "paths": {"/devices/devicelist/": {"get": {"operationId": "devices_devicelist_list", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "model_number", "in": "query", "description": "model_number", "required": false, "type": "string"}, {"name": "manufacturer", "in": "query", "description": "manufacturer", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "description", "required": false, "type": "string"}, {"name": "device_type", "in": "query", "description": "device_type", "required": false, "type": "string", "enum": ["IMPLANT", "DIAGNOSTIC", "MONITORING", "THERAPEUTIC"]}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "updated_at", "in": "query", "description": "updated_at", "required": false, "type": "string"}, {"name": "assigned_to", "in": "query", "description": "assigned_to", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Device"}}}}}}, "tags": ["devices"]}, "post": {"operationId": "devices_devicelist_create", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Device"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Device"}}}, "tags": ["devices"]}, "parameters": []}, "/devices/devicelist/{id}/": {"get": {"operationId": "devices_devicelist_read", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Device"}}}, "tags": ["devices"]}, "put": {"operationId": "devices_devicelist_update", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Device"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Device"}}}, "tags": ["devices"]}, "patch": {"operationId": "devices_devicelist_partial_update", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Device"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Device"}}}, "tags": ["devices"]}, "delete": {"operationId": "devices_devicelist_delete", "summary": "API endpoint for managing medical devices.", "description": "This endpoint allows you to:\n- List all devices\n- Create new devices\n- Retrieve device details\n- Update devices\n- Delete devices\n- Assign devices to engineers", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["devices"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this device.", "required": true, "type": "integer"}]}, "/devices/devicelist/{id}/assign/": {"post": {"operationId": "devices_devicelist_assign", "description": "Assign a device to an engineer", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["user_id"], "type": "object", "properties": {"user_id": {"description": "ID of the user to assign the device to", "type": "integer"}}}}], "responses": {"200": {"description": "Device assigned successfully"}, "400": {"description": "Invalid request"}}, "tags": ["devices"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this device.", "required": true, "type": "integer"}]}, "/devices/protocols/": {"get": {"operationId": "devices_protocols_list", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "version", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "description", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["DRAFT", "REVIEW", "APPROVED", "ARCHIVED"]}, {"name": "created_by", "in": "query", "description": "created_by", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "updated_at", "in": "query", "description": "updated_at", "required": false, "type": "string"}, {"name": "devices", "in": "query", "description": "devices", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/TestProtocol"}}}}}}, "tags": ["devices"]}, "post": {"operationId": "devices_protocols_create", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestProtocol"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TestProtocol"}}}, "tags": ["devices"]}, "parameters": []}, "/devices/protocols/{id}/": {"get": {"operationId": "devices_protocols_read", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestProtocol"}}}, "tags": ["devices"]}, "put": {"operationId": "devices_protocols_update", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestProtocol"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestProtocol"}}}, "tags": ["devices"]}, "patch": {"operationId": "devices_protocols_partial_update", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestProtocol"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestProtocol"}}}, "tags": ["devices"]}, "delete": {"operationId": "devices_protocols_delete", "summary": "API endpoint for managing test protocols.", "description": "This endpoint allows you to:\n- List all protocols\n- Create new protocols\n- Retrieve protocol details\n- Update protocols\n- Delete protocols", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["devices"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this test protocol.", "required": true, "type": "integer"}]}, "/devices/results/": {"get": {"operationId": "devices_results_list", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [{"name": "device", "in": "query", "description": "device", "required": false, "type": "string"}, {"name": "protocol", "in": "query", "description": "protocol", "required": false, "type": "string"}, {"name": "performed_by", "in": "query", "description": "performed_by", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["PASS", "FAIL", "IN_PROGRESS", "INVALID"]}, {"name": "start_time", "in": "query", "description": "start_time", "required": false, "type": "string"}, {"name": "end_time", "in": "query", "description": "end_time", "required": false, "type": "string"}, {"name": "notes", "in": "query", "description": "notes", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "updated_at", "in": "query", "description": "updated_at", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/TestResult"}}}}}}, "tags": ["devices"]}, "post": {"operationId": "devices_results_create", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestResult"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TestResult"}}}, "tags": ["devices"]}, "parameters": []}, "/devices/results/{id}/": {"get": {"operationId": "devices_results_read", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestResult"}}}, "tags": ["devices"]}, "put": {"operationId": "devices_results_update", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestResult"}}}, "tags": ["devices"]}, "patch": {"operationId": "devices_results_partial_update", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TestResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TestResult"}}}, "tags": ["devices"]}, "delete": {"operationId": "devices_results_delete", "summary": "API endpoint for managing test results.", "description": "This endpoint allows you to:\n- List all test results\n- Create new test results\n- Retrieve test result details\n- Update test results\n- Delete test results\n- Complete tests", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["devices"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this test result.", "required": true, "type": "integer"}]}, "/devices/results/{id}/complete/": {"post": {"operationId": "devices_results_complete", "description": "Complete a test and record its results", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["status"], "type": "object", "properties": {"status": {"description": "Final status of the test", "type": "string", "enum": ["PASS", "FAIL", "INVALID"]}, "end_time": {"description": "When the test was completed", "type": "string", "format": "date-time"}, "notes": {"description": "Additional notes about the test", "type": "string"}}}}], "responses": {"200": {"description": "Test completed successfully"}, "400": {"description": "Test already completed or invalid request"}}, "tags": ["devices"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this test result.", "required": true, "type": "integer"}]}, "/token/": {"post": {"operationId": "token_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AuthToken"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AuthToken"}}}, "produces": ["application/json"], "tags": ["token"]}, "parameters": []}, "/users/users/": {"get": {"operationId": "users_users_list", "description": "List all users. Only accessible by admin users.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "post": {"operationId": "users_users_create", "description": "Create a new user. Only accessible by admin users.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["users"]}, "parameters": []}, "/users/users/{id}/": {"get": {"operationId": "users_users_read", "description": "ViewSet for managing users. Only accessible by admin users.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "put": {"operationId": "users_users_update", "description": "Update a user. Only accessible by admin users.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "patch": {"operationId": "users_users_partial_update", "description": "ViewSet for managing users. Only accessible by admin users.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["users"]}, "delete": {"operationId": "users_users_delete", "description": "Delete a user. Only accessible by admin users.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this User.", "required": true, "type": "integer"}]}}, "definitions": {"Device": {"required": ["name", "device_type", "model_number", "manufacturer", "description"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "device_type": {"title": "Device type", "type": "string", "enum": ["IMPLANT", "DIAGNOSTIC", "MONITORING", "THERAPEUTIC"]}, "model_number": {"title": "Model number", "type": "string", "maxLength": 100, "minLength": 1}, "manufacturer": {"title": "Manufacturer", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "assigned_to": {"title": "Assigned to", "type": "integer", "x-nullable": true}, "assigned_to_name": {"title": "Assigned to name", "type": "string", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "TestProtocol": {"required": ["name", "version", "description", "devices"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "version": {"title": "Version", "type": "string", "maxLength": 20, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["DRAFT", "REVIEW", "APPROVED", "ARCHIVED"]}, "created_by": {"title": "Created by", "type": "integer"}, "created_by_name": {"title": "Created by name", "type": "string", "readOnly": true}, "devices": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "TestResult": {"required": ["device", "protocol"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "device": {"title": "Device", "type": "integer"}, "device_name": {"title": "Device name", "type": "string", "readOnly": true}, "protocol": {"title": "Protocol", "type": "integer"}, "protocol_name": {"title": "Protocol name", "type": "string", "readOnly": true}, "performed_by": {"title": "Performed by", "type": "integer"}, "performed_by_name": {"title": "Performed by name", "type": "string", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["PASS", "FAIL", "IN_PROGRESS", "INVALID"]}, "start_time": {"title": "Start time", "type": "string", "format": "date-time"}, "end_time": {"title": "End time", "type": "string", "format": "date-time", "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}, "data": {"title": "Data", "type": "object"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "AuthToken": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "readOnly": true, "minLength": 1}}}}}