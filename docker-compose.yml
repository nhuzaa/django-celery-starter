services:
  db:
    container_name: vitalbio-db
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vital-bio-network
  backend:
    container_name: vitalbio-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=development
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - vital-bio-network
  frontend:
    container_name: vitalbio-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    depends_on:
      - backend
    networks:
      - vital-bio-network

  redis:
    container_name: vitalbio-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - vital-bio-network

  celery:
    container_name: vitalbio-celery
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=development
    command: celery -A config worker -l INFO
    volumes:
      - ./backend:/app/backend
    environment:
      - DEBUG=${DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - vital-bio-network

volumes:
  postgres_data:

networks:
  vital-bio-network:
    driver: bridge 